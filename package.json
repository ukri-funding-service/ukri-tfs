{
    "name": "root",
    "private": true,
    "scripts": {
        "audit:fix": "lerna-audit",
        "postaudit:fix": "lerna bootstrap",
        "audit": "lerna-audit --no-fix",
        "bootstrap:packages": "lerna bootstrap --scope=@ukri-tfs/{common,configuration,cost-policy,display-ids,domain-events,email,email-templates,exceptions,fastify-server-startup,feature-flags,frontend-utils,html-utils,http,lambda-handler,logging,message-handling,permissions,sanitize-html,secrets,security,security-headers,service-lifecycle,strings,test-framework,tfs-request,tfs-response,time,ui-components,utilities,validation,tfs-middleware,service-host-names} --include-dependencies",
        "bootstrap": "lerna bootstrap",
        "build": "nx run-many -t build",
        "changed": "lerna changed",
        "clean:certs": "node ./utils/local/deleteCerts",
        "clean:deep": "./node_modules/.bin/nx reset && git clean -idx -e local",
        "clean": "nx run-many -t clean",
        "compile": "nx run-many -t compile",
        "cmt": "commit",
        "db:clean:migrate": "nx run-many -t db:clean:migrate --output-style=stream",
        "db:migrate": "nx run-many -t db:migrate --output-style=stream",
        "db:some:seed": "nx run-many -t test:some:data:seed -p @ukri-tfs/end-to-end-tests",
        "db:clean:seed": "npm run db:clean:migrate && npm run db:some:seed",
        "docker:compose:db:down": "lerna exec --scope='@ukri-tfs/{opportunity-manager,application-manager,admin-services}' -- docker compose -f docker-compose-db.yml down",
        "docs": "nx run-many -t docs",
        "lint:ci": "nx run-many -t lint:ci",
        "lint:staged": "nx run-many -t lint:staged",
        "lint": "nx run-many -t lint",
        "list:changed:include-dependencies": "lerna list --since develop --include-dependencies",
        "list:changed:include-dependents": "lerna list --since develop --include-dependents --long",
        "list:changed": "lerna list --since master",
        "list:include-dependencies": "lerna list --include-dependencies --long",
        "list:include-dependents": "lerna list --include-dependents --long",
        "list": "lerna list --long",
        "localsetup": "node ./utils/local/deleteCerts && node ./utils/local/copyCertificates",
        "lock:fix": "lerna clean --yes && lerna bootstrap --no-ci",
        "messaging:start:local": "cd messaging/; docker compose -f ./docker-compose.yml up",
        "package": "nx run-many -t package",
        "precommit": "lint-staged",
        "prepare": "is-ci || npx husky",
        "prepush": "nx affected -t db:scan:migrations,unused-exports,test --base origin/develop",
        "prettier": "nx run-many -t prettier",
        "prettier:fix": "nx run-many -t prettier:fix",
        "prune:ui-components-react": "rimraf packages/ui-components/node_modules/{react,react-dom}",
        "publish": "lerna publish",
        "publish:ci": "lerna publish from-tag",
        "search:start:local": "cd search/; docker compose -f ./docker-compose.yml up",
        "seed:post-decision": "cd services/end-to-end-tests && concurrently \"npm run test:om:data:seed\" \"npm run test:adm:data:seed\" \"npm run test:am:data:seed\" \"npm run test:pd:data:seed\"",
        "setup": "npm ci && npm run localsetup && lerna bootstrap",
        "setup:post-decision": "nx run-many -t docker:compose:up:db --projects='@ukri-tfs/{admin-services,application-manager,opportunity-manager,organisation-service-api,post-decision-api}' -- -d && nx run-many -t wait-on-db --projects='@ukri-tfs/{admin-services,application-manager,opportunity-manager,organisation-service-api,post-decision-api}' && nx run-many -t db:migrate --projects='@ukri-tfs/{admin-services,application-manager,opportunity-manager,organisation-service-api,post-decision-api}' && npm run seed:post-decision",
        "sonar:ci:combined": "npm run test:coverage && sonar-scanner -Dsonar.login=${SONAR_API_KEY} ${SONAR_EXTRA_ARGS}",
        "sonar:ci": "nx run-many -t sonar:ci",
        "test:admin-services:API": "npm run --prefix services/admin-services/tests test:API:component",
        "test": "nx run-many -t test",
        "version": "lerna version --conventional-commits --no-changelog --no-private --amend --no-push",
        "version:ci": "lerna version --conventional-commits --no-changelog --no-private --amend --yes"
    },
    "lint-staged": {
        "*.{ts,tsx,js,jsx,mjs,cjs}": [
            "eslint --fix --max-warnings=0",
            "prettier --write"
        ],
        "*.{json,md,yml,yaml}": [
            "prettier --write"
        ]
    },
    "devDependencies": {
        "@commitlint/cli": "^19.3.0",
        "@commitlint/config-conventional": "^19.2.2",
        "@commitlint/prompt-cli": "^19.3.1",
        "@cucumber/cucumber": "9.x",
        "@cucumber/messages": "^17.1.1",
        "@cucumber/pretty-formatter": "^1.0.0-alpha.1",
        "@typescript-eslint/eslint-plugin": "^4.6.1",
        "@typescript-eslint/parser": "^4.6.1",
        "concurrently": "^8.2.2",
        "eslint": "7.x",
        "eslint-bamboo-formatter": "^0.1.1",
        "eslint-config-airbnb-base": "^14.2.0",
        "eslint-plugin-deprecate": "^0.7.0",
        "eslint-plugin-jest": ">=25.7.0 <26",
        "eslint-plugin-mocha": "^9.0.0",
        "eslint-plugin-node": "11.1.0",
        "eslint-plugin-react": "7.x",
        "eslint-plugin-testing-library": "^3.9.0",
        "eslint-plugin-unused-imports": "^1.1.1",
        "husky": "^9.1.0",
        "is-ci": "^3.0.1",
        "lerna": "^6.6.2",
        "lerna-audit": "^1.3.0",
        "lint-staged": "^15.2.7",
        "npm-audit-html": "^2.0.0-beta.2",
        "prettier": "2.x",
        "sonarqube-scanner": "^2.8.1",
        "ts-unused-exports": "^11.0.1"
    },
    "engines": {
        "node": ">=18.20.3 <19",
        "npm": ">=10.7.0 <11"
    },
    "overrides": {
        "lerna": {
            "tar": "6.2.1"
        },
        "@lerna/legacy-package-management": {
            "semver": "7.5.2",
            "tar": "6.2.1"
        }
    }
}
